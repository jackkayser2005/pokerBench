services:
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: poker
      POSTGRES_PASSWORD: poker
      POSTGRES_DB: thunderdome
    ports: ["5432:5432"]
    healthcheck:
      # Check the thunderdome database explicitly to avoid "database \"poker\" does not exist"
      test: ["CMD-SHELL", "pg_isready -U poker -d thunderdome"]
      interval: 5s
      timeout: 3s
      retries: 10
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./secrets:/app/secrets:ro

  app:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - ${ENV_FILE:-compose.env}        # set ENV_FILE to choose a different env
    depends_on:
      db:
        condition: service_healthy
    ports: ["8080:8080"]
    volumes:
      - ./secrets:/app/secrets:ro
    command: ["/app/ai-thunderdome"]    # server mode
    restart: unless-stopped

  duel:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - ${ENV_FILE:-compose.env}
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./secrets:/app/secrets:ro
    command: ["/app/ai-thunderdome", "--duel"]

  migrate:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - ${ENV_FILE:-compose.env}
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./secrets:/app/secrets:ro
    command: ["/app/ai-thunderdome", "--migrate"]
    restart: "no"

volumes:
  pgdata:
